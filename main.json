{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "2003841625356679764"
    }
  },
  "parameters": {
    "deploymentParams": {
      "type": "object"
    },
    "storageAccountParams": {
      "type": "object"
    },
    "storageQueueParams": {
      "type": "object"
    },
    "logAnalyticsWorkspaceParams": {
      "type": "object"
    },
    "funcParams": {
      "type": "object"
    },
    "brandTags": {
      "type": "object"
    },
    "dateNow": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy-MM-dd-hh-mm')]"
    },
    "tags": {
      "type": "object",
      "defaultValue": "[union(parameters('brandTags'), createObject('last_deployed', parameters('dateNow')))]"
    }
  },
  "variables": {
    "location": "[parameters('deploymentParams').location]",
    "rgName": "[format('{0}_{1}_{2}', parameters('deploymentParams').enterprise_name, parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').global_uniqueness)]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('rgName')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "rgName": {
            "value": "[variables('rgName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "819534100384258999"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]"
            },
            "tags": {
              "type": "object"
            },
            "rgName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('rgName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "rgName": {
              "type": "string",
              "value": "[parameters('rgName')]"
            },
            "rgId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('rgName'))]"
            },
            "stringOutput": {
              "type": "string",
              "value": "[deployment().name]"
            },
            "integerOutput": {
              "type": "int",
              "value": "[length(environment().authentication.audiences)]"
            },
            "booleanOutput": {
              "type": "bool",
              "value": "[contains(deployment().name, 'Miztiik')]"
            },
            "arrayOutput": {
              "type": "array",
              "value": "[environment().authentication.audiences]"
            },
            "objectOutput": {
              "type": "object",
              "value": "[subscription()]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_La', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness)]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "logAnalyticsWorkspaceParams": {
            "value": "[parameters('logAnalyticsWorkspaceParams')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "15898173412459608449"
            }
          },
          "parameters": {
            "deploymentParams": {
              "type": "object"
            },
            "logAnalyticsWorkspaceParams": {
              "type": "object"
            },
            "tags": {
              "type": "object",
              "defaultValue": "[resourceGroup().tags]"
            }
          },
          "resources": [
            {
              "condition": "[equals(parameters('logAnalyticsWorkspaceParams').commitTier, false())]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}-payGTier-{1}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "properties": {
                "retentionInDays": "[parameters('logAnalyticsWorkspaceParams').retentionInDays]",
                "sku": {
                  "name": "PerGB2018"
                },
                "workspaceCapping": {
                  "dailyQuotaGb": "[parameters('logAnalyticsWorkspaceParams').dailyQuotaGb]"
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "condition": "[equals(parameters('logAnalyticsWorkspaceParams').commitTier, true())]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}-commitTier-{1}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "CapacityReservation",
                  "capacityReservationLevel": 100
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}/{1}', format('{0}-payGTier-{1}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness), format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').storeEventsCustomTableName, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "plan": "Analytics",
                "retentionInDays": -1,
                "schema": {
                  "description": "Store order events custom table",
                  "displayName": "DOESNT-SEEM-TO-WORK-STORE-EVENTS",
                  "name": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').storeEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "RawData",
                      "type": "string"
                    },
                    {
                      "name": "request_id",
                      "type": "string"
                    },
                    {
                      "name": "event_type",
                      "type": "string"
                    },
                    {
                      "name": "store_id",
                      "displayName": "store_id",
                      "description": "The Id of the store placing the Order",
                      "type": "int"
                    },
                    {
                      "name": "cust_id",
                      "type": "int"
                    },
                    {
                      "name": "category",
                      "type": "string"
                    },
                    {
                      "name": "sku",
                      "type": "int"
                    },
                    {
                      "name": "price",
                      "type": "real"
                    },
                    {
                      "name": "qty",
                      "type": "int"
                    },
                    {
                      "name": "discount",
                      "type": "real"
                    },
                    {
                      "name": "gift_wrap",
                      "type": "boolean"
                    },
                    {
                      "name": "variant",
                      "description": "Product Variety",
                      "type": "string"
                    },
                    {
                      "name": "priority_shipping",
                      "description": "Priority Shipping requested",
                      "type": "boolean"
                    },
                    {
                      "name": "contact_me",
                      "description": "Miztiik Automation Brand Experience Store",
                      "displayName": "contact_me",
                      "type": "string"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-payGTier-{1}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}/{1}', format('{0}-payGTier-{1}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness), format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').automationEventsCustomTableName, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "plan": "Analytics",
                "retentionInDays": -1,
                "schema": {
                  "description": "Miztiik Automation Events",
                  "displayName": "DOESNT-SEEM-TO-WORK-AUTOMATION-EVENTS",
                  "name": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').automationEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "RawData",
                      "type": "string"
                    },
                    {
                      "name": "request_id",
                      "type": "string"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-payGTier-{1}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness))]"
              ]
            }
          ],
          "outputs": {
            "logAnalyticsPayGWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-payGTier-{1}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness))]"
            },
            "logAnalyticsPayGWorkspaceName": {
              "type": "string",
              "value": "[format('{0}-payGTier-{1}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness)]"
            },
            "logAnalyticsCommitTierWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-commitTier-{1}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness))]"
            },
            "storeEventsCustomTableNamePrefix": {
              "type": "string",
              "value": "[format('{0}{1}', parameters('logAnalyticsWorkspaceParams').storeEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            },
            "storeEventsCustomTableName": {
              "type": "string",
              "value": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').storeEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            },
            "automationEventsCustomTableNamePrefix": {
              "type": "string",
              "value": "[format('{0}{1}', parameters('logAnalyticsWorkspaceParams').automationEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            },
            "automationEventsCustomTableName": {
              "type": "string",
              "value": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').automationEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_Sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness)]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "storageAccountParams": {
            "value": "[parameters('storageAccountParams')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "7503574837881860862"
            }
          },
          "parameters": {
            "deploymentParams": {
              "type": "object"
            },
            "storageAccountParams": {
              "type": "object"
            },
            "tags": {
              "type": "object",
              "defaultValue": "[resourceGroup().tags]"
            }
          },
          "variables": {
            "uniqStr": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "saName": "[format('{0}{1}{2}', parameters('storageAccountParams').storageAccountNamePrefix, variables('uniqStr'), parameters('deploymentParams').global_uniqueness)]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[variables('saName')]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[format('{0}', parameters('storageAccountParams').fault_tolerant_sku)]"
              },
              "kind": "[format('{0}', parameters('storageAccountParams').kind)]",
              "properties": {
                "minimumTlsVersion": "[format('{0}', parameters('storageAccountParams').minimumTlsVersion)]",
                "allowBlobPublicAccess": "[parameters('storageAccountParams').allowBlobPublicAccess]",
                "defaultToOAuthAuthentication": true,
                "supportsHttpsTrafficOnly": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                },
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              }
            }
          ],
          "outputs": {
            "saName": {
              "type": "string",
              "value": "[variables('saName')]"
            },
            "saPrimaryEndpointsBlob": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('saName')), '2022-05-01').primaryEndpoints.blob]"
            },
            "saPrimaryEndpoints": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('saName')), '2022-05-01').primaryEndpoints]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_Blob', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness)]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "storageAccountParams": {
            "value": "[parameters('storageAccountParams')]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_Sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.saName.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_La', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.logAnalyticsPayGWorkspaceId.value]"
          },
          "enableDiagnostics": {
            "value": false
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "16866209770911301612"
            }
          },
          "parameters": {
            "deploymentParams": {
              "type": "object"
            },
            "storageAccountParams": {
              "type": "object"
            },
            "storageAccountName": {
              "type": "string"
            },
            "enableDiagnostics": {
              "type": "bool",
              "defaultValue": false
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', format('{0}-blob-{1}', parameters('storageAccountParams').blobNamePrefix, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "condition": "[parameters('enableDiagnostics')]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[format('{0}-Diaglogs', parameters('storageAccountName'))]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "StorageWrite",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ]
              }
            }
          ],
          "outputs": {
            "blobContainerId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', parameters('storageAccountName'), 'default', format('{0}-blob-{1}', parameters('storageAccountParams').blobNamePrefix, parameters('deploymentParams').global_uniqueness))]"
            },
            "blobContainerName": {
              "type": "string",
              "value": "[format('{0}-blob-{1}', parameters('storageAccountParams').blobNamePrefix, parameters('deploymentParams').global_uniqueness)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_La', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_Sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_Sq', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness)]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "storageQueueParams": {
            "value": "[parameters('storageQueueParams')]"
          },
          "saName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_Sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.saName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "12716849760006566110"
            }
          },
          "parameters": {
            "deploymentParams": {
              "type": "object"
            },
            "storageQueueParams": {
              "type": "object"
            },
            "saName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/queueServices",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}', parameters('saName'), 'default')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('saName'), 'default', format('{0}-q-{1}', parameters('storageQueueParams').queueNamePrefix, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "metadata": {}
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('saName'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "queueName": {
              "type": "string",
              "value": "[format('{0}-q-{1}', parameters('storageQueueParams').queueNamePrefix, parameters('deploymentParams').global_uniqueness)]"
            },
            "queueId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts/queueServices/queues', parameters('saName'), 'default', format('{0}-q-{1}', parameters('storageQueueParams').queueNamePrefix, parameters('deploymentParams').global_uniqueness))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_Sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_Fa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness)]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "funcParams": {
            "value": "[parameters('funcParams')]"
          },
          "saName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_Sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.saName.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_La', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.logAnalyticsPayGWorkspaceId.value]"
          },
          "enableDiagnostics": {
            "value": true
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "13979461635316983593"
            }
          },
          "parameters": {
            "deploymentParams": {
              "type": "object"
            },
            "funcParams": {
              "type": "object"
            },
            "tags": {
              "type": "object",
              "defaultValue": "[resourceGroup().tags]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "enableDiagnostics": {
              "type": "bool",
              "defaultValue": true
            },
            "saName": {
              "type": "string"
            },
            "api_1_name": {
              "type": "string",
              "defaultValue": "store-events-producer"
            }
          },
          "variables": {
            "$fxv#0": "import azure.functions as func\nimport os\nimport logging\n\ndef main(req: func.HttpRequest) -> func.HttpResponse:\n    logging.info('Oye Python HTTP trigger function processed a request.')\n    headers = {\"miztiik-automation-processed\": \"yes\"}\n    return func.HttpResponse(\"Miztiik Automation Function executed successfully.\", \n                                 headers=headers, \n                                 status_code=200\n                                 )\n\n\n"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}-fnPlan-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "kind": "linux",
              "sku": {
                "name": "[parameters('funcParams').skuName]",
                "tier": "[parameters('funcParams').funcHostingPlanTier]",
                "family": "Y"
              },
              "properties": {
                "reserved": true
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "kind": "functionapp,linux",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "enabled": true,
                "reserved": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-fnPlan-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "clientAffinityEnabled": true,
                "httpsOnly": true,
                "siteConfig": {
                  "linuxFxVersion": "Python|3.10",
                  "ftpsState": "Disabled",
                  "minTlsVersion": "1.2"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-fnPlan-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), 'appsettings')]",
              "properties": {
                "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('saName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('saName')), '2021-06-01').keys[0].value)]",
                "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('saName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('saName')), '2021-06-01').keys[0].value)]",
                "WEBSITE_CONTENTSHARE": "[toLower(parameters('funcParams').funcNamePrefix)]",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)), '2020-02-02').InstrumentationKey]",
                "FUNCTIONS_WORKER_RUNTIME": "python",
                "FUNCTIONS_EXTENSION_VERSION": "~4",
                "SUBSCRIPTION_ID": "[subscription().subscriptionId]",
                "RESOURCE_GROUP": "[resourceGroup().name]",
                "DatabaseConnectionString": ""
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "[resourceId('Microsoft.Web/sites', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/functions",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-fn-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "config": {
                  "disabled": false,
                  "bindings": [
                    {
                      "name": "req",
                      "type": "httpTrigger",
                      "direction": "in",
                      "authLevel": "anonymous",
                      "methods": [
                        "get",
                        "post"
                      ]
                    },
                    {
                      "name": "$return",
                      "type": "http",
                      "direction": "out"
                    }
                  ]
                },
                "files": {
                  "__init__.py": "[variables('$fxv#0')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}.azurewebsites.net', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)))]",
              "properties": {
                "siteName": "[format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]",
                "hostNameType": "Verified"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "Request_Source": "rest"
              }
            },
            {
              "condition": "[parameters('enableDiagnostics')]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
              "name": "[format('{0}-logs-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "FunctionAppLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Developer",
                "capacity": 1
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "publisherEmail": "miztiik@github",
                "publisherName": "miztiik"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/loggers",
              "apiVersion": "2019-01-01",
              "name": "[format('{0}/{1}', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "loggerType": "applicationInsights",
                "description": "Logger resources to APIM",
                "credentials": {
                  "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)), '2020-02-02').InstrumentationKey]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "[resourceId('Microsoft.Insights/components', format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/diagnostics",
              "apiVersion": "2022-08-01",
              "name": "[format('{0}/{1}', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), 'applicationinsights')]",
              "properties": {
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "alwaysLog": "allErrors",
                "logClientIp": true,
                "httpCorrelationProtocol": "W3C",
                "verbosity": "verbose",
                "backend": {
                  "request": {
                    "body": {
                      "bytes": 4096
                    }
                  },
                  "response": {
                    "body": {
                      "bytes": 4096
                    }
                  }
                },
                "sampling": {
                  "percentage": 89,
                  "samplingType": "fixed"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "[resourceId('Microsoft.ApiManagement/service/loggers', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "condition": "[parameters('enableDiagnostics')]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ApiManagement/service/{0}', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
              "name": "[format('{0}-api-mgmt-diagnostics-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logAnalyticsDestinationType": "Dedicated",
                "logs": [
                  {
                    "category": "GatewayLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2021-01-01-preview",
              "name": "[format('{0}/{1}', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-api-{1}', parameters('api_1_name'), parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "displayName": "Store Event Producer API",
                "apiRevision": "1",
                "description": "Python based store events producer. Check out Github for more details",
                "serviceUrl": "https://github.com/miztiik",
                "path": "/",
                "isCurrent": true,
                "subscriptionRequired": false,
                "protocols": [
                  "http",
                  "https"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/namedValues",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), 'rest-api-function-api-key')]",
              "properties": {
                "displayName": "rest-api-function-api-key",
                "secret": true,
                "value": "[listkeys(format('{0}/host/default', resourceId('Microsoft.Web/sites', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))), '2016-08-01').masterKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "[resourceId('Microsoft.Web/sites', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/backends",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), 'store-events-producer-function')]",
              "properties": {
                "description": "Store events producer function app",
                "url": "[format('https://{0}.azurewebsites.net/api/{1}', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-fn-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "protocol": "http",
                "resourceId": "[format('{0}{1}', environment().resourceManager, resourceId('Microsoft.Web/sites', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)))]",
                "credentials": {
                  "query": {},
                  "header": {
                    "x-functions-key": [
                      "[format('{{{{{0}}}}}', 'rest-api-function-api-key')]"
                    ]
                  }
                },
                "tls": {
                  "validateCertificateChain": true,
                  "validateCertificateName": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/namedValues', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), 'rest-api-function-api-key')]",
                "[resourceId('Microsoft.ApiManagement/service', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "[resourceId('Microsoft.Web/sites/functions', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-fn-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "[resourceId('Microsoft.Web/sites', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}/{2}', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-api-{1}', parameters('api_1_name'), parameters('deploymentParams').global_uniqueness), 'GetEventCount')]",
              "properties": {
                "displayName": "/default_event_count - Default Events Count",
                "method": "GET",
                "urlTemplate": "/",
                "description": "Provides capability to get detailed about a specific deprecation",
                "responses": [
                  {
                    "statusCode": 200,
                    "description": "Success - Payload of Store Events Structure",
                    "representations": [
                      {
                        "contentType": "application/json",
                        "examples": {
                          "default": {
                            "value": {
                              "storeId": 0,
                              "firstName": "string",
                              "lastName": "string",
                              "loyaltyId": "string",
                              "orderItems": [
                                {
                                  "productId": 0,
                                  "quantity": 0
                                }
                              ]
                            }
                          }
                        },
                        "typeName": "deprecationInfo"
                      }
                    ],
                    "headers": []
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-api-{1}', parameters('api_1_name'), parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}/{2}', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-api-{1}', parameters('api_1_name'), parameters('deploymentParams').global_uniqueness), 'post-order')]",
              "properties": {
                "displayName": "/trigger - Initiate Order Generation",
                "description": "Provides ability to request \"N-count\" of events",
                "method": "POST",
                "urlTemplate": "/trigger/{count}",
                "templateParameters": [
                  {
                    "name": "count",
                    "description": "The unique ID of the deprecation.",
                    "type": "string",
                    "required": true,
                    "values": []
                  }
                ],
                "request": {
                  "representations": [
                    {
                      "contentType": "application/json",
                      "examples": {
                        "default": {
                          "value": {
                            "storeId": 0,
                            "firstName": "string",
                            "lastName": "string",
                            "loyaltyId": "string",
                            "orderItems": [
                              {
                                "productId": 0,
                                "quantity": 0
                              }
                            ]
                          }
                        }
                      }
                    },
                    {
                      "contentType": "text/json",
                      "examples": {
                        "default": {
                          "value": {
                            "storeId": 0,
                            "firstName": "string",
                            "lastName": "string",
                            "loyaltyId": "string",
                            "orderItems": [
                              {
                                "productId": 0,
                                "quantity": 0
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "responses": [
                  {
                    "statusCode": 200,
                    "description": "Success"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-api-{1}', parameters('api_1_name'), parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations/policies",
              "apiVersion": "2021-04-01-preview",
              "name": "[format('{0}/{1}/{2}/{3}', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-api-{1}', parameters('api_1_name'), parameters('deploymentParams').global_uniqueness), 'GetEventCount', 'policy')]",
              "properties": {
                "format": "rawxml",
                "value": "[format('<policies><inbound><set-backend-service id=\"apim-generated-policy\" backend-id=\"{0}\" /></inbound><backend><forward-request /></backend><outbound /></policies>', 'store-events-producer-function')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/backends', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), 'store-events-producer-function')]",
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-api-{1}', parameters('api_1_name'), parameters('deploymentParams').global_uniqueness), 'GetEventCount')]"
              ]
            }
          ],
          "outputs": {
            "fnName": {
              "type": "string",
              "value": "[format('{0}-fn-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]"
            },
            "fnIdentity": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', format('{0}-fnApp-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)), '2021-03-01', 'full').identity.principalId]"
            },
            "apiMgmtId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ApiManagement/service', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]"
            },
            "appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)), '2020-02-02').InstrumentationKey]"
            },
            "apiManagementURL": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)), '2021-08-01').portalUrl]"
            },
            "ApiUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service/apis/operations', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness), format('{0}-api-{1}', parameters('api_1_name'), parameters('deploymentParams').global_uniqueness), 'GetEventCount'), '2021-12-01-preview').urlTemplate]"
            },
            "myApiUrl1": {
              "type": "string",
              "value": "[format('{0}/{1}/{2}', reference(resourceId('Microsoft.ApiManagement/service', format('{0}-api-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)), '2021-08-01').gatewayUrl, format('{0}-api-{1}', parameters('api_1_name'), parameters('deploymentParams').global_uniqueness), 'GetEventCount')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_La', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').global_uniqueness))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}_{1}_Sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').global_uniqueness))]"
      ]
    }
  ]
}